{% set name = "spectrafit" %}
{% set version = "0.17.0" %}

package:
  name: {{ name|lower }}-recipe
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/spectrafit-{{ version }}.tar.gz
  sha256: 7d5c514f87366164190c904bf4b89ecc80222a2a94a5d2c2a24a2b3240ebca2b

build:
  number: 0

outputs:
  - name: {{ name|lower }}
    script: build_base.sh
    build:
      noarch: python
      skip: true  # [py<38]
      entry_points:
        - spectrafit = spectrafit.spectrafit:command_line_runner
        - spectrafit-file-converter = spectrafit.plugins.file_converter:command_line_runner
        - spectrafit-data-converter = spectrafit.plugins.data_converter:command_line_runner
    requirements:
      host:
        - python >=3.8, <3.11
        - pip
        - poetry
      run:
        - python >=3.8, <3.11
        - pyyaml
        - ascii-art
        - emcee
        - lmfit
        - numdifftools
        - numpy
        - openpyxl
        - pandas
        - pydantic
        - scikit-learn
        - seaborn
        - tabulate
        - tomli
        - pydantic
        - tomli-w
        - tqdm
    test:
      imports:
        - spectrafit
      commands:
        - spectrafit --help
        - spectrafit-file-converter --help
        - spectrafit-data-converter --help
      host:
        - python
        - pip
        - build
  - name: {{ name|lower }}-jupyter
    build:
      noarch: python
      skip: true  # [not linux64]
      entry_points:
        - spectrafit-jupyter = spectrafit.app.app:jupyter
      host:
        - python >=3.8, <3.12
        - pip
        - poetry
    requirements:
      run:
        - {{ pin_subpackage('spectrafit', max_pin='x.x.x') }}
        - jupyterlab
        - python-kaleido ==0.2.1.post1  # [not linux64]
        - python-kaleido ==0.2.1  # [linux64]
        - itables
        - plotly
        - dtale
    test:
      imports:
        - spectrafit
      commands:
        - spectrafit-jupyter --help
        - python -c "from spectrafit.plugins.notebook import SpectraFitNotebook"
      host:
        - python
        - pip
        - build
  - name: {{ name|lower }}-graph
    build:
      noarch: python
      skip: true  # [not linux64]
      entry_points:
        - spectrafit-pkl-visualizer = spectrafit.plugins.pkl_visualizer:command_line_runner
        - spectrafit-pkl-converter = spectrafit.plugins.pkl_converter:command_line_runner
      host:
        - python >=3.8, <3.11
        - pip
        - poetry
    requirements:
      run:
        - {{ pin_subpackage('spectrafit', max_pin='x.x.x') }}
        - networkx
        - pydot
    test:
      imports:
        - spectrafit
      commands:
        - spectrafit --help
        - spectrafit-pkl-visualizer --help
        - spectrafit-pkl-converter --help
      host:
        - python
        - pip
        - build
  - name: {{ name|lower }}-rixs
    build:
      noarch: python
      skip: true  # [not linux64]
      entry_points:
        - spectrafit-rixs-visualizer = spectrafit.plugins.rixs_visualizer:command_line_runner
        - spectrafit-rixs-converter = spectrafit.plugins.rixs_converter:command_line_runner
      host:
        - python >=3.8, <3.11
        - pip
        - poetry
    requirements:
      run:
        - {{ pin_subpackage('spectrafit', max_pin='x.x.x') }}
        - {{ pin_subpackage('spectrafit-graph', max_pin='x.x.x') }}
        - {{ pin_subpackage('spectrafit-jupyter', max_pin='x.x.x') }}
        - jupyter-dash
        - ipywidgets
        - dash-bootstrap-components
        - dash-bootstrap-templates
    test:
      imports:
        - spectrafit
      commands:
        - spectrafit-rixs-visualizer --help
        - spectrafit-rixs-converter --help
      host:
        - python
        - pip
        - build
  - name: {{ name|lower }}-all
    build:
      noarch: python
      skip: true  # [not linux64]
      host:
        - python >=3.8, <3.11
        - pip
        - poetry
    requirements:
      run:
        - {{ pin_subpackage('spectrafit', max_pin='x.x.x') }}
        - {{ pin_subpackage('spectrafit-jupyter', max_pin='x.x.x') }}
        - {{ pin_subpackage('spectrafit-graph', max_pin='x.x.x') }}
        - {{ pin_subpackage('spectrafit-rixs', max_pin='x.x.x') }}
    test:
      imports:
        - spectrafit
      commands:
        - spectrafit --help
        - spectrafit-file-converter --help
        - spectrafit-data-converter --help
        - spectrafit-pkl-visualizer --help
        - spectrafit-pkl-converter --help
        - spectrafit-rixs-visualizer --help
        - spectrafit-rixs-converter --help
        - spectrafit-jupyter --help
        - python -c "from spectrafit.plugins.notebook import SpectraFitNotebook"

about:
  home: https://pypi.org/project/spectrafit/
  summary: Fast fitting of 2D-Spectra with established routines
  description: |
    SpectraFit is a command-line and Jupyter-notebook tool for
    quick data-fitting based on the regular expression of
    distribution functions.
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  doc_url: https://anselmoo.github.io/spectrafit/
  dev_url: https://github.com/anselmoo/spectrafit

extra:
  recipe-maintainers:
    - Anselmoo
